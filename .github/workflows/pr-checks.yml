name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  quality-checks:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install UV
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
    
    - name: Install dependencies
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        export PYTHONPATH="${PWD}/src:${PYTHONPATH}"
        uv sync
        uv add --dev pylint pytest pytest-mock
        # Install package in editable mode
        uv pip install -e .
    
    - name: Run Pylint
      id: pylint
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        export PYTHONPATH="${PWD}/src:${PYTHONPATH}"
        output=$(PYTHONPATH="${PWD}/src:${PYTHONPATH}" uv run pylint src/ --exit-zero --score=y)
        score=$(echo "$output" | grep "Your code has been rated at" | sed -E 's/.*rated at ([0-9.]+).*/\1/')
        echo "score=$score" >> $GITHUB_OUTPUT
        echo "Pylint score: $score/10"
        PYTHONPATH="${PWD}/src:${PYTHONPATH}" uv run pylint src/ --fail-under=9.5
    
    - name: Run Tests
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        export PYTHONPATH="${PWD}/src:${PYTHONPATH}"
        PYTHONPATH="${PWD}/src:${PYTHONPATH}" uv run pytest tests/ -v --tb=short
    
    - name: Display Results Summary
      if: always()
      run: |
        echo "## PR Quality Check Summary"
        echo ""
        echo "**Pylint Score:** ${{ steps.pylint.outputs.score }}/10"
        if [ $(echo "${{ steps.pylint.outputs.score }} >= 9.5" | bc -l) -eq 1 ]; then
          echo "[PASS] Pylint check passed!"
        else
          echo "[FAIL] Pylint score must be 9.5 or higher"
        fi
        echo ""
        echo "Check the workflow status above for test results."
    
    - name: Comment PR
      uses: actions/github-script@v7
      if: always() && github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
      with:
        script: |
          const score = '${{ steps.pylint.outputs.score }}' || 'N/A';
          const passed = parseFloat(score) >= 9.5;
          
          const comment = `## PR Quality Check
          
          **Pylint Score:** ${score}/10 ${passed ? '[PASS]' : '[FAIL]'}
          **Tests:** Check workflow status above
          
          ${passed ? '[PASS] All checks passed!' : '[FAIL] Pylint score must be 9.5 or higher'}`;
          
          try {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('Could not create comment:', error.message);
            console.log('This is expected for PRs from forks.');
          }